Class MRHD_CrawlAnimation: CustomInventory
{
	Default{Inventory.MaxAmount 1;+INVENTORY.UNDROPPABLE+INVENTORY.UNTOSSABLE+INVENTORY.AUTOACTIVATE}
	
	Bool RightCrawl, LeftFar, Crawling;
	LinearValueInterpolator Yaw;
	Int YawCool, PrevRol, Grab;
	Bool GrabBig;
	Float PitchToGrab, AngleToGrab, GrabOfst;
	Override Void Tick()
	{
		Super.Tick();
		
		HDPlayerPawn Plr = HDPlayerPawn(Owner);
		if(!Owner){Destroy();Return;}
		
		if(GetAge()%350==0)Owner.UseInventory(Self);
		
		CheckCrawl(Plr);
		CheckGrab(Plr);
	}
	
	Void CheckCrawl(HDPlayerPawn Plr)
	{
		if(!Plr.incapacitated&&Plr.Health>0){Crawling=False;Return;}

		if (!Yaw)
			Yaw = LinearValueInterpolator.Create(Plr.Player.Cmd.Yaw*0.01, 20);
		else
		{
			if(
				Abs(Plr.Player.Cmd.Yaw)*0.01-Abs(Yaw.GetValue())>15
				){Yaw.mMaxchange = 15;YawCool = 5;}
			else
			{
				Float FERG = Yaw.GetValue()*0.5;
				Yaw.mMaxchange = 2;
			}
			
			Yaw.Update(Plr.Player.Cmd.Yaw*0.01);
		}
		if(Plr.Health<1)Yaw.Reset(0);
		Crawling = True;
		if(Plr.Player.ReadyWeapon is 'HDIncapWeapon' &&
			HDIncapWeapon(Plr.Player.ReadyWeapon).inventorytype != Null &&
			!(HDIncapWeapon(Plr.Player.ReadyWeapon).inventorytype is 'HDIncapWeapon'))RightCrawl=false;
		else RightCrawl = True;
	}
	
	Void CheckGrab(HDPlayerPawn Plr)
	{
		if(!Plr.Player.ReadyWeapon || !HDWeaponGrabber(Plr.Player.ReadyWeapon)){Grab=0;Return;}
		
		if(!(Plr.Player.Cmd.Buttons&BT_USER2)){if(Grab>0)Grab-=Min(Grab, 3);Return;}
		
		Let Hand = HDWeaponGrabber(Plr.Player.ReadyWeapon);
		Let Grabbin = HDWeaponGrabber(Plr.Player.ReadyWeapon).grabbed;
		
		if(!Grabbin){if(Grab>0)Grab-=Min(Grab, 3);Return;}
		
		TextureID Sprite = Grabbin.CurState.GetSpriteTexture(0);
		Float Height = Texman.CheckRealHeight(Sprite);
		Vector2 Width = Texman.GetScaledSize(Sprite);
		
		GrabBig = Height*Grabbin.Scale.Y>35||Grabbin.bIsMonster||Width.X*Grabbin.Scale.X>30||Grabbin.Mass>110;
		GrabOfst = Width.X*Grabbin.Scale.X*.9+30-Plr.Distance3D(Grabbin);
		
		Grab+=3;
		if(Grab>15)Grab = 15;
		
		PitchToGrab = Plr.PitchTo(Grabbin, Plr.Player.ViewZ-Plr.Pos.Z, Grabbin.Height*.5);
		AngleToGrab = Plr.AngleTo(Grabbin);
	}
	
	States
	{
	  Use:
		TNT1 A 0{A_Overlay(2289, "Crawl", true);A_Overlay(2290, "CrawlR", true);A_Overlay(2288, "Grab", true);}
		Fail;
	  Pickup:
		TNT1 A 0{return true;}
		Stop;
		
		Grab:
			TNT1 A 1 A_JumpIf(invoker.Grab>0, "Grabbing");
			Loop;
			
		Grabbing:
			#### # 0 {if(invoker.GrabBig){A_Overlay(2287, "GrabbingRight");A_OverlayOffset(2287, -100, 100);A_OverlayPivot(2287, .5, .5);A_OverlayFlags(2287, PSPF_FLIP|PSPF_MIRROR, 1);}}
			PUNG T 1 {A_OverlayOffset(OverlayId(), -100, 100);A_OverlayPivot(OverlayID(), .5, .5);}
		GrabbingLoop:
			PUNG T 1{
				Float Steyte = invoker.Grab;
				Steyte/=15;
				Float OfstX = -50;
				if(invoker.GrabBig)OfstX = -60 - invoker.GrabOfst;
				A_OverlayOffset(OverlayID(), OfstX+50*Steyte+DeltaAngle(invoker.AngleToGrab, Angle)*1.5, 100-70*Steyte+(invoker.PitchToGrab-Pitch)*1.5-Min(0, DeltaAngle(invoker.AngleToGrab, Angle)), WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), -(invoker.PitchToGrab-Pitch)*.25 + DeltaAngle(Angle, invoker.AngleToGrab)*.25, WOF_INTERPOLATE);
			}
			#### # 0 A_JumpIf(invoker.Grab<1, "Grab");
			Loop;
		
		GrabbingRight:
			PUNG T 1{
				Float Steyte = invoker.Grab;
				Steyte/=15;
				Float OfstX = -60 - invoker.GrabOfst;
				A_OverlayOffset(OverlayID(), OfstX+50*Steyte-DeltaAngle(invoker.AngleToGrab, Angle)*1.5, 100-70*Steyte+(invoker.PitchToGrab-Pitch)*1.5-Min(0, DeltaAngle(invoker.AngleToGrab, Angle)), WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), -(invoker.PitchToGrab-Pitch)*.25 + DeltaAngle(Angle, invoker.AngleToGrab)*.25, WOF_INTERPOLATE);
			}
			#### # 0 A_JumpIf(invoker.Grab>0&&invoker.GrabBig, "GrabbingRight");
			Stop;
			
		
		Crawl:
			TNT1 A 1 A_JumpIf(invoker.Crawling, "Crawling");
			Loop;
			
		Crawling:
			HGRB G 0 A_Jumpif((Roll<0&&Pitch>40), 7);
			HGRB E 0 A_Jumpif((Roll<0), 6);
			HGRB F 0 A_JumpIf((Pitch>40&&Roll<7), 5);
			HGRB D 0 A_Jumpif((Roll<7), 4);
			HGRB A 0 A_JumpIf(Roll<12, 3);
			HGRB H 0 A_JumpIf(Roll>=14, 2);
			HGRB I 0;
			HGRB # 1 {
				A_OverlayFlags(OverlayId(), PSPF_ADDBOB|PSPF_ADDWEAPON, 1);
				A_OverlayPivotAlign(OverlayId(), PSPA_CENTER, PSPA_CENTER);
				Float Pit = 0;
				Float OrigPitch = Pitch;
				Float SprRot = 0;
				Float SprScal = 0;
				if(OrigPitch>40 && Roll>=0 && Roll<7){SprRot=7;SprScal = -0.1;}
				else if(OrigPitch>40 && Roll<0)SprRot = -7;
				if(OrigPitch>31){Pitch*=Pitch*0.03;Pit=(Pitch-31)*1.1;}
				Int HandDown = 0;
				if(Player.Cmd.Buttons&BT_ATTACK)HandDown = 400;
				if(Height>20)HandDown = 30 + (Height-16)*2;
				Float OrigRoll = Roll;
				if(Roll>0)
				{
					Float SprRot2, SprScal2;
					if(Roll>=12){SprRot = -10; SprScal2 = 0.1;}
					if(Roll<2||Roll>13)Roll*=1.5;
					if(OrigPitch>22)Pit=(Pitch-22)*1.1;
					A_OverlayRotate(OverlayId(), -35 + Roll*0.3 + SprRot, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -30+invoker.Yaw.GetValue() - Roll*3.15 -Pit, (-Pitch)+30-Roll*2 + HandDown);
					A_OverlayScale(OverlayId(), 1 - Roll*.015 + SprScal2, 1 - Roll*.01 + SprScal2);
				}
				else
				{
					if((Roll<0&&Roll>-2)||(Roll<-13&&Roll>=-15))Roll*=1.1;
					if(OrigPitch>22)Pit=(Pitch-22)*1.1;
					A_OverlayRotate(OverlayId(), -35 + Roll + SprRot + HandDown*0.2);
					A_OverlayOffset(OverlayId(), -30+invoker.Yaw.GetValue()-Pit + HandDown*.75, (-Pitch)+30-Roll+HandDown);
					A_OverlayScale(OverlayId(), 1 + abs(Roll)*0.05 + SprScal - HandDown*0.002, 1 + abs(Roll)*.05 + SprScal - HandDown*0.002);
				}
				Roll=OrigRoll;
				Pitch = OrigPitch;
			}
		CrawlingLoop:
			HGRB G 0 A_Jumpif((Roll<0&&Pitch>40), 7);
			HGRB E 0 A_Jumpif((Roll<0), 6);
			HGRB F 0 A_JumpIf((Pitch>40&&Roll<7), 5);
			HGRB D 0 A_Jumpif((Roll<7), 4);
			HGRB A 0 A_JumpIf(Roll<12, 3);
			HGRB H 0 A_JumpIf(Roll>=14, 2);
			HGRB I 0;
			HGRB # 1 {
				A_OverlayFlags(OverlayId(), PSPF_ADDBOB|PSPF_ADDWEAPON, 1);
				A_OverlayPivotAlign(OverlayId(), PSPA_CENTER, PSPA_CENTER);
				Float Pit = 0;
				Float OrigPitch = Pitch;
				Float SprRot = 0;
				Float SprScal = 0;
				if(OrigPitch>40 && Roll>=0 && Roll<7){SprRot=7;SprScal = -0.1;}
				else if(OrigPitch>40 && Roll<0)SprRot = -7;
				if(OrigPitch>31){Pitch*=Pitch*0.03;Pit=(Pitch-31)*1.1;}
				Int HandDown = 0;
				if(Player.Cmd.Buttons&BT_ATTACK)HandDown = 400;
				if(Height>20)HandDown = 30 + (Height-16)*2;
				Float OrigRoll = Roll;
				if(Roll>0)
				{
					Float SprRot2, SprScal2;
					if(Roll>=12){SprRot = -10; SprScal2 = 0.1;}
					if(Roll<2||Roll>13)Roll*=1.5;
					if(OrigPitch>22)Pit=(Pitch-22)*1.1;
					A_OverlayRotate(OverlayId(), -35 + Roll*0.3 + SprRot, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -30+invoker.Yaw.GetValue() - Roll*3.15 -Pit, (-Pitch)+30-Roll*2 + HandDown, WOF_INTERPOLATE);
					A_OverlayScale(OverlayId(), 1 - Roll*.015 + SprScal2, 1 - Roll*.01 + SprScal2, WOF_INTERPOLATE);
				}
				else
				{
					if((Roll<0&&Roll>-2)||(Roll<-13&&Roll>=-15))Roll*=1.1;
					if(OrigPitch>22)Pit=(Pitch-22)*1.1;
					A_OverlayRotate(OverlayId(), -35 + Roll + SprRot + HandDown*0.2, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -30+invoker.Yaw.GetValue()-Pit + HandDown*.75, (-Pitch)+30-Roll+HandDown, WOF_INTERPOLATE);
					A_OverlayScale(OverlayId(), 1 + abs(Roll)*0.05 + SprScal - HandDown*0.002, 1 + abs(Roll)*.05 + SprScal - HandDown*0.002, WOF_INTERPOLATE);
				}
				Roll=OrigRoll;
				Pitch = OrigPitch;
			}
			TNT1 A 0 A_JumpIf(!Invoker.Crawling, "Crawl");
			Loop;
			
		
		CrawlR:
			TNT1 A 1 A_JumpIf(invoker.Crawling &&
			!((Player.ReadyWeapon is 'NSHFragGrenades') && Player.GetPSprite(27) && Player.GetPSprite(27).Sprite == GetSpriteIndex("GRNDA0") && Health<1)
				, "CrawlingR");
			TNT1 A 0 {A_OverlayFlags(OverlayId(), PSPF_MIRROR|PSPF_FLIP|PSPF_ADDBOB|PSPF_ADDWEAPON, 1);
				A_OverlayPivotAlign(OverlayId(), PSPA_CENTER, PSPA_CENTER);
				A_OverlayOffset(OverlayId(), -20, (-Pitch)+40+Roll);
				A_OverlayRotate(OverlayId(), -35 - Roll);
				A_OverlayScale(OverlayId(), 1.05 + abs(Roll)*0.05, 1.05 + abs(Roll)*.05);}
			Loop;
			
		CrawlingR:
			HGRB C 0 A_JumpIf(!Invoker.RightCrawl, 8);
			HGRB G 0 A_Jumpif((Roll>0&&Pitch>40), 7);
			HGRB E 0 A_Jumpif((Roll>0), 6);
			HGRB F 0 A_JumpIf((Pitch>40&&Roll>-7), 5);
			HGRB D 0 A_Jumpif((Roll>-7), 4);
			HGRB A 0 A_JumpIf(Roll>-12, 3);
			HGRB H 0 A_JumpIf(Roll<=-14, 2);
			HGRB I 0;
			HGRB # 1 {
				A_OverlayFlags(OverlayId(), PSPF_MIRROR|PSPF_FLIP|PSPF_ADDBOB|PSPF_ADDWEAPON, 1);
				A_OverlayPivotAlign(OverlayId(), PSPA_CENTER, PSPA_CENTER);
				Int HandDown = 0;
				if(Player.Cmd.Buttons&BT_ATTACK||Player.Cmd.Buttons&BT_ALTATTACK||Player.Cmd.Buttons&BT_USER2)HandDown = 400;
				if(Height>20)HandDown = 30 + (Height-16)*2;
				Float Pit = 0;
				Float OrigPitch = Pitch;
				Float SprRot = 0;
				Float SprScal = 0;
				if(OrigPitch>40 && Roll<=0 && Roll>-7){SprRot=7;SprScal = -0.1;}
				else if(OrigPitch>40 && Roll>0)SprRot = -7;
				if(OrigPitch>31){Pitch*=Pitch*0.03;Pit=(Pitch-31)*1.1;}
				Float OrigRoll = Roll;
				if(Roll<0)
				{
					Float SprRot2, SprScal2;
					if(Roll<=-12){SprRot2 = -10; SprScal2 = 0.1;}
					if(Roll>-2||Roll<-13)Roll*=1.6;
					if(OrigPitch>22)Pit=(Pitch-22)*1.1;
					A_OverlayRotate(OverlayId(), -35 - Roll*0.3 + SprRot2, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -30-invoker.Yaw.GetValue() + Roll*3.15-Pit, (-Pitch)+30+Roll*2+HandDown);
					A_OverlayScale(OverlayId(), 1 + Roll*.015 + SprScal2, 1 + Roll*.01 + SprScal2);
				}
				else
				{
					if((Roll>0&&Roll<2)||(Roll>13&&Roll<=15))Roll*=1.1;
					A_OverlayRotate(OverlayId(), -35 - Roll + SprRot + HandDown*.2, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -20-invoker.Yaw.GetValue()-Pit + HandDown*.75, (-Pitch)+40+Roll+HandDown);
					A_OverlayScale(OverlayId(), 1.05 + abs(Roll)*0.05 + SprScal - HandDown*.002, 1.05 + abs(Roll)*.05 + SprScal - HandDown*.002);
				}
				Roll = OrigRoll;
				Pitch = OrigPitch;
			}
		CrawlingRLoop:
			HGRB C 0 A_JumpIf(!Invoker.RightCrawl, 8);
			HGRB G 0 A_Jumpif((Roll>0&&Pitch>40), 7);
			HGRB E 0 A_Jumpif((Roll>0), 6);
			HGRB F 0 A_JumpIf((Pitch>40&&Roll>-7), 5);
			HGRB D 0 A_Jumpif((Roll>-7), 4);
			HGRB A 0 A_JumpIf(Roll>-12, 3);
			HGRB H 0 A_JumpIf(Roll<=-14, 2);
			HGRB I 0;
			HGRB # 1 {
				A_OverlayFlags(OverlayId(), PSPF_MIRROR|PSPF_FLIP|PSPF_ADDBOB|PSPF_ADDWEAPON, 1);
				A_OverlayPivotAlign(OverlayId(), PSPA_CENTER, PSPA_CENTER);
				Int HandDown = 0;
				if(Player.Cmd.Buttons&BT_ATTACK||Player.Cmd.Buttons&BT_ALTATTACK||Player.Cmd.Buttons&BT_USER2)HandDown = 400;
				if(Height>20)HandDown = 30 + (Height-16)*2;
				Float Pit = 0;
				Float OrigPitch = Pitch;
				Float SprRot = 0;
				Float SprScal = 0;
				if(OrigPitch>40 && Roll<=0 && Roll>-7){SprRot=7;SprScal = -0.1;}
				else if(OrigPitch>40 && Roll>0)SprRot = -7;
				if(OrigPitch>31){Pitch*=Pitch*0.03;Pit=(Pitch-31)*1.1;}
				Float OrigRoll = Roll;
				if(Roll<0)
				{
					Float SprRot2, SprScal2;
					if(Roll<=-12){SprRot2 = -10; SprScal2 = 0.1;}
					if(Roll>-2||Roll<-13)Roll*=1.6;
					if(OrigPitch>22)Pit=(Pitch-22)*1.1;
					A_OverlayRotate(OverlayId(), -35 - Roll*0.3 + SprRot2, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -30-invoker.Yaw.GetValue() + Roll*3.15-Pit, (-Pitch)+30+Roll*2+HandDown, WOF_INTERPOLATE);
					A_OverlayScale(OverlayId(), 1 + Roll*.015 + SprScal2, 1 + Roll*.01 + SprScal2, WOF_INTERPOLATE);
				}
				else
				{
					if((Roll>0&&Roll<2)||(Roll>13&&Roll<=15))Roll*=1.1;
					A_OverlayRotate(OverlayId(), -35 - Roll + SprRot + HandDown*.2, WOF_INTERPOLATE);
					A_OverlayOffset(OverlayId(), -20-invoker.Yaw.GetValue()-Pit + HandDown*.75, (-Pitch)+40+Roll+HandDown, WOF_INTERPOLATE);
					A_OverlayScale(OverlayId(), 1.05 + abs(Roll)*0.05 + SprScal - HandDown*.002, 1.05 + abs(Roll)*.05 + SprScal - HandDown*.002, WOF_INTERPOLATE);
				}
				Roll = OrigRoll;
				Pitch = OrigPitch;
			}
			TNT1 # 0 A_JumpIf(!Invoker.Crawling, "CrawlR");
			Loop;
	}
}