class NSHRevolver:HDRevolver{// Replaces HDRevolver{
	
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			sb.drawimage("PRNDA0",(-47,-10),sb.DI_SCREEN_CENTER_BOTTOM,scale:(2.1,2.55));
			sb.drawnum(hpl.countinv("HDRevolverAmmo"),-44,-8,sb.DI_SCREEN_CENTER_BOTTOM);
			int ninemil=hpl.countinv("HDPistolAmmo");
			if(ninemil>0){
				sb.drawimage("PRNDA0",(-64,-10),sb.DI_SCREEN_CENTER_BOTTOM,scale:(2.1,2.1));
				sb.drawnum(ninemil,-60,-8,sb.DI_SCREEN_CENTER_BOTTOM);
			}
		}
		int plf=hpl.player.getpsprite(PSP_WEAPON).frame;
		for(int i=BUGS_CYL1;i<=BUGS_CYL6;i++){
			double drawangle=i*(360./6.)-150;
			vector2 cylpos;
			if(plf==4){
				drawangle-=45.;
				cylpos=(-30,-14);
			}else if(cylinderopen&&wronghand){
				cylpos=(-34,-12);
			}else if(cylinderopen&&!wronghand){
				drawangle-=90;
				cylpos=(-34,-12);
			}else{
				cylpos=(-22,-20);
			}
			double cdrngl=cos(drawangle);
			double sdrngl=sin(drawangle);
			if(
				!cylinderopen
				&&sb.hud_aspectscale.getbool()
			){
				cdrngl*=1.1;
				sdrngl*=(1./1.1);
			}
			vector2 drawpos=cylpos+(cdrngl,sdrngl)*5;
			sb.fill(
				hdw.weaponstatus[i]>0?
				color(255,240,230,40)
				:color(200,30,26,24),
				drawpos.x,
				drawpos.y,
				3,3,
				sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_ITEM_RIGHT
			);
		}
	}
	override string gethelptext(){
		if(!Cvar.GetCVar("mrnsha_binds", Owner.Player).GetBool())LocalizeHelp();
		else
		{
			MRHD_WeapAnimsHandler Handler = MRHD_WeapAnimsHandler(EventHandler.Find("MRHD_WeapAnimsHandler"));
			
			if(Handler)Handler.MRHD_GetWeaponKeyBinds(Self);
		}
		
		if(cylinderopen)return
		LWPHELP_FIRE..StringTable.Localize("$REVCWH_FIRE")//" Close cylinder\n"
		..LWPHELP_ALTFIRE..StringTable.Localize("$REVCWH_ALTFIRE")..LWPHELP_ZOOM..StringTable.Localize("$REVCWH_ALTZOOM")
		..LWPHELP_UNLOAD..StringTable.Localize("$REVCWH_UNLOAD")
		..LWPHELP_RELOAD..StringTable.Localize("$REVCWH_RELOAD")..LWPHELP_FIREMODE..StringTable.Localize("$REVCWH_FMODPRELOAD")
		;
		return
		LWPHELP_FIRESHOOT
		..LWPHELP_ALTFIRE..StringTable.Localize("$REVWH_ALTFIRE")
		..LWPHELP_ALTRELOAD.."/"..LWPHELP_FIREMODE..StringTable.Localize("$REVWH_ARELOADPFMOD")
		..LWPHELP_UNLOAD.."/"..LWPHELP_RELOAD..StringTable.Localize("$REVWH_RELOAD")
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc
	){
		if(HDRevolver(hdw).cylinderopen)return;

		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		vector2 scc;
		vector2 bobb=bob*1.3;

		sb.SetClipRect(
			-8+bob.x,-9+bob.y,16,15,
			sb.DI_SCREEN_CENTER
		);
		scc=(0.9,0.9);

		int Light = Owner.Cursector.LightLevel * 1.75;
		if(owner.player.fixedlightlevel==1)Light = 255;
		sb.drawimage(
			"revfst",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9,scale:scc
		);
		if(CVar.GetCVar("mrnsha_sights", owner.player).GetBool())
		sb.drawimage(
			"revfst",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9,scale:scc, col:color(255-Light,0,0,0)
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"revbkst",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			scale:scc
		);
		if(CVar.GetCVar("mrnsha_sights", owner.player).GetBool())
		sb.drawimage(
			"revbkst",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			scale:scc, col:color(255-Light,0,0,0)
		);
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,18,60);
			if(owner.countinv("HDRevolverAmmo"))owner.A_DropInventory("HDRevolverAmmo",amt);
			else owner.A_DropInventory("HDPistolAmmo",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_SetInventory("HDRevolverAmmo",1);
	}
	override void initializewepstats(bool idfa){
		weaponstatus[BUGS_CYL1]=BUGS_MASTERBALL;
		weaponstatus[BUGS_CYL2]=BUGS_MASTERBALL;
		weaponstatus[BUGS_CYL3]=BUGS_MASTERBALL;
		weaponstatus[BUGS_CYL4]=BUGS_MASTERBALL;
		weaponstatus[BUGS_CYL5]=BUGS_MASTERBALL;
		weaponstatus[BUGS_CYL6]=BUGS_MASTERBALL;
	}
	
	override void loadoutconfigure(String input)
	{
		if(Owner && Owner.FindInventory("HDRevolver"))
		{
			Let inv = HDWeapon(Owner.FindInventory("HDRevolver"));
			if(Owner.Player.ReadyWeapon != inv)
			{
				WeaponStatus[0]=inv.WeaponStatus[0];
				WeaponStatus[BUGS_CYL1]=inv.WeaponStatus[BUGS_CYL1];
				WeaponStatus[BUGS_CYL2]=inv.WeaponStatus[BUGS_CYL2];
				WeaponStatus[BUGS_CYL3]=inv.WeaponStatus[BUGS_CYL3];
				WeaponStatus[BUGS_CYL4]=inv.WeaponStatus[BUGS_CYL4];
				WeaponStatus[BUGS_CYL5]=inv.WeaponStatus[BUGS_CYL5];
				WeaponStatus[BUGS_CYL6]=inv.WeaponStatus[BUGS_CYL6];
				inv.Destroy();
			}
			else
			{
				let mwt=SpareWeapons(findinventory("SpareWeapons"));
				if(!mwt)Return;
				int pistindex=mwt.weapontype.find(getclassname());
				if(pistindex==mwt.weapontype.size()){
					return;
				}
				array<string> wepstat;
				string wepstat2="";
				mwt.weaponstatus[pistindex].split(wepstat,",");
				for(int i=0;i<wepstat.size();i++){
					if(i)wepstat2=wepstat2..",";
					wepstat2=wepstat2..weaponstatus[i];
					weaponstatus[i]=wepstat[i].toint();
				}
				mwt.weaponstatus[pistindex]=wepstat2;
			}
			Return;
		}
		Super.LoadOutConfigure(input);
	}
	
	Override Void Tick()
	{
		Super.Tick();
		if(Owner)Return;
		HDWeapon a = HDWeapon(Spawn("HDRevolver", pos));
		if(a)
		{
			a.Angle = Angle;
			a.Pitch = Pitch;
			a.Vel = Vel;
			For(int i=0;i<HDWEP_STATUSSLOTS;i++)a.weaponstatus[i]=weaponstatus[i];
			Destroy();
		}
	}

	action bool HoldingRightHanded(){
		bool righthanded=invoker.wronghand;
		righthanded=
		(
			righthanded
			&&Wads.CheckNumForName("id",0)!=-1
		)||(
			!righthanded
			&&Wads.CheckNumForName("id",0)==-1
		);
		return righthanded;
	}

	action void A_HitExtractor(){
		double cosp=cos(pitch);
		for(int i=BUGS_CYL1;i<=BUGS_CYL6;i++){
			int thischamber=invoker.weaponstatus[i];
			if(thischamber<1)continue;
			if(
				thischamber==BUGS_NINEMILSPENT
				||thischamber==BUGS_NINEMIL
				||thischamber==BUGS_MASTERBALLSPENT
			){
				actor aaa=spawn(
					thischamber==BUGS_NINEMIL?"HDLoose9mm"
						:thischamber==BUGS_MASTERBALLSPENT?"HDSpent355"
						:"HDSpent9mm",
					(pos.xy,pos.z+height-10)
					+(cosp*cos(angle),cosp*sin(angle),sin(pitch))*7,
					ALLOW_REPLACE
				);
				aaa.vel=vel+(frandom(-1,1),frandom(-1,1),-1);
				aaa.angle=angle;
				invoker.weaponstatus[i]=0;
				
				int index;
				For(index=0;index<invoker.FireSmokes.Size();index++){
					if(!invoker.FireSmokes[index])Break;
				}
				if(index>=invoker.FireSmokes.Size())Continue;
				
				NSHA_SmokeContainer a = New('NSHA_SmokeContainer');
				a.Vel = (FRandom(-.2, .2), -FRandom(.2, 1), FRandom(.05, .2));
				invoker.FireSmokes[index] = a;
				
				A_Overlay(PSP_FLASH+10+index, "SmokeLay");
				Float Ang = i;
				Ang /= BUGS_CYL6;
				Ang *= 360;
				Vector2 Offst = (-Cos(Ang), -Sin(Ang))*10;
				Offst += invoker.WrongHand?(20, 10):(18,3);
				if(Player.GetPSprite(PSP_WEAPON).Sprite)
				A_OverlayOffset(PSP_FLASH+10+index, 130+HDPlayerPawn(Self).crossbob.X+Offst.X, 120+HDPlayerPawn(Self).crossbob.Y+Offst.Y);
				Player.GetPSprite(PSP_FLASH+10+index).Scale = (1,1)*FRandom(.25, .3);
				Float Alph = (thischamber==BUGS_MASTERBALLSPENT?FRandom(.02, .11):FRandom(.005, .06))*3;
				A_OverlayAlpha(PSP_FLASH+10+index, Alph);
			}
		}
		A_StartSound("weapons/deinoeject",8,CHANF_OVERLAP);
	}
	action void A_ExtractAll(){
		double cosp=cos(pitch);
		bool gotany=false;
		for(int i=BUGS_CYL1;i<=BUGS_CYL6;i++){
			int thischamber=invoker.weaponstatus[i];
			if(thischamber<1)continue;
			if(
				thischamber==BUGS_NINEMILSPENT
				||thischamber==BUGS_MASTERBALLSPENT
			){
				actor aaa=spawn("HDSpent9mm",
					(pos.xy,pos.z+height-14)
					+(cosp*cos(angle),cosp*sin(angle),sin(pitch)-2)*3,
					ALLOW_REPLACE
				);
				aaa.vel=vel+(frandom(-0.3,0.3),frandom(-0.3,0.3),-1);
				if(thischamber==BUGS_MASTERBALLSPENT)aaa.scale.y=0.85;
				invoker.weaponstatus[i]=0;
			}else{
				//give or spawn either 9mm or 355
				class<inventory>ammotype=
					thischamber==BUGS_MASTERBALL?
					"HDRevolverAmmo":"HDPistolAmmo";
				if(A_JumpIfInventory(ammotype,0,"null")){
					actor aaa=spawn(ammotype,
						(pos.xy,pos.z+height-14)
						+(cosp*cos(angle),cosp*sin(angle),sin(pitch)-2)*3,
						ALLOW_REPLACE
					);
					aaa.vel=vel+(frandom(-1,1),frandom(-1,1),-1);
				}else{
					A_GiveInventory(ammotype,1);
					gotany=true;
				}
				invoker.weaponstatus[i]=0;
			}
		}
		if(gotany)A_StartSound("weapons/pocket",9);
	}
	action void A_FireRevolver(){
		invoker.weaponstatus[0]&=~BUGF_COCKED;
		int cyl=invoker.weaponstatus[BUGS_CYL1];
		if(
			cyl!=BUGS_MASTERBALL
			&&cyl!=BUGS_NINEMIL
		){
			A_StartSound("weapons/deinoclick",8,CHANF_OVERLAP);
			return;
		}
		invoker.weaponstatus[BUGS_CYL1]--;
		bool masterball=cyl==BUGS_MASTERBALL;

		let bbb=HDBulletActor.FireBullet(self,masterball?"HDB_355":"HDB_9",spread:1.,speedfactor:frandom(0.99,1.01));
		if(
			frandom(0,ceilingz-floorz)<bbb.speed*(masterball?0.4:0.3)
		)A_AlertMonsters(masterball?512:256);

		A_GunFlash();
		A_Light1();
		A_ZoomRecoil(0.995);
		A_Overlay(PSP_FLASH-1, "RecoilLay");
		HDFlashAlpha(masterball?72:64);
		A_StartSound("weapons/deinoblast1",CHAN_WEAPON,CHANF_OVERLAP);
		if(hdplayerpawn(self)){
			hdplayerpawn(self).gunbraced=false;
		}
		if(masterball){
			A_MuzzleClimb(-frandom(0.8,1.6),-frandom(1.6,2.));
			A_StartSound("weapons/deinoblast1",CHAN_WEAPON,CHANF_OVERLAP,0.5);
			A_StartSound("weapons/deinoblast2",CHAN_WEAPON,CHANF_OVERLAP,0.4);
		}else{
			A_MuzzleClimb(-frandom(0.6,1.2),-frandom(0.8,1.8));
			A_StartSound("weapons/deinoblast2",CHAN_WEAPON,CHANF_OVERLAP,0.3);
		}
	}
	action void A_ReadyOpen(){
		A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER3);
		if(justpressed(BT_ALTATTACK))setweaponstate("open_rotatecylinder");
		else if(justpressed(BT_RELOAD)){
			if(
				(
					invoker.weaponstatus[BUGS_CYL1]>0
					&&invoker.weaponstatus[BUGS_CYL2]>0
					&&invoker.weaponstatus[BUGS_CYL3]>0
					&&invoker.weaponstatus[BUGS_CYL4]>0
					&&invoker.weaponstatus[BUGS_CYL5]>0
					&&invoker.weaponstatus[BUGS_CYL6]>0
				)||(
					!countinv("HDPistolAmmo")
					&&!countinv("HDRevolverAmmo")
				)
			)setweaponstate("open_closecylinder");
			else setweaponstate("open_loadround");
		}else if(justpressed(BT_ATTACK))setweaponstate("open_closecylinder");
		else if(justpressed(BT_UNLOAD)){
			if(!invoker.cooldown){
				setweaponstate("open_dumpcylinder");
				invoker.cooldown=6;
			}else{
				setweaponstate("open_dumpcylinder_all");
			}
		}
		if(invoker.cooldown>0)invoker.cooldown--;
	}
	
	action void A_RoundReady(int rndnm){
		int gunframe=-1;
		if(invoker.weaponstatus[rndnm]>0)gunframe=player.getpsprite(PSP_WEAPON).frame;
		let thissprite=player.getpsprite(BUGS_OVRCYL+rndnm);
		if(invoker.weaponstatus[rndnm]==1||invoker.weaponstatus[rndnm]==3)thissprite.sprite=getspriteindex("RVL"..rndnm.."A0");
		switch(gunframe){
		case 4: //E
			thissprite.frame=0;
			break;
		case 5: //F
			thissprite.frame=1;
			break;
		case 6: //G
			thissprite.frame=pressingzoom()?4:2;
			break;
		case 7: //H
			thissprite.frame=5;
			break;
		case 8: //I
			thissprite.frame=6;
			break;
		case 9: //J
			thissprite.frame=pressingzoom()?8:7;
			break;
		default:
			thissprite.sprite=getspriteindex("TNT1A0");
			thissprite.frame=0;
			return;break;
		}
	}
/*
	A normal ready
	B ready cylinder midframe
	C hammer fully cocked (maybe renumber these lol)
	D recoil frame
	E cylinder swinging out
	F cylinder swung out - held in leftt hand, working chamber in middle
	G cylinder swung out midframe
	//Right handed
	H cylinder swinging out
	I cylinder swung out - held in right hand
	J cylinder swung out - midframe
*/

	NSHA_SmokeContainer FireSmokes[50];
	
	states{
	
	SmokeLay:
		NSHS A 0{
					A_OverlayFlags(OverlayId(), PSPF_ADDBOB|PSPF_ADDWEAPON, false);
					A_OverlayFlags(OverlayId(), PSPF_ALPHA|PSPF_RENDERSTYLE, True);
					A_OverlayRenderStyle(OverlayId(), CVar.FindCVar("mrnsha_muzzlesmoke").GetBool()?STYLE_TRANSLUCENT:STYLE_NONE);
					A_OverlayPivot(OverlayId(), .5, .5);
					//Float Scale = FRandom(.05, .06);
					//A_OverlayScale(OverlayId(), Scale, Scale);
					//A_OverlayOffset(OverlayId(), 128+HDPlayerPawn(Self).crossbob.X, 113+HDPlayerPawn(Self).crossbob.Y);
					Player.GetPSprite(OverlayId()).Alpha=FRandom(.3, .5);
				}
		NSHS A 1{A_OverlayFlags(OverlayId(), PSPF_ALPHA|PSPF_RENDERSTYLE, True);
					A_OverlayRenderStyle(OverlayId(), CVar.FindCVar("mrnsha_muzzlesmoke").GetBool()?STYLE_TRANSLUCENT:STYLE_NONE);}
		NSHS AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1{
					int Index = OverlayId()-PSP_FLASH-10;
					A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, true);
					
					Player.GetPSprite(OverlayId()).Alpha-=.01;
					
					Float Scale = (FRandom(.09, .13) + (Vel.X*Cos(Angle) + Vel.Y*Sin(Angle))*.2);
					Scale -= (invoker.FireSmokes[Index].Vel.Y);
					Scale *= .1;
					A_OverlayScale(OverlayId(), Max(0, Scale), Max(0, Scale), WOF_ADD);
					
					if(Player.GetPSprite(OverlayId()).Scale.Length()>15)A_OverlayRenderStyle(OverlayId(), STYLE_NONE);
					Player.GetPSprite(OverlayId()).Y += Player.Cmd.Pitch*.02 + Max(0, (Vel.X*Cos(Angle) + Vel.Y*Sin(Angle)*3));
					Player.GetPSprite(OverlayId()).Y -= invoker.FireSmokes[Index].Vel.Z*Cos(Pitch);
					Player.GetPSprite(OverlayId()).Y += invoker.FireSmokes[Index].Vel.Y*Sin(Pitch);
					Player.GetPSprite(OverlayId()).X += Player.Cmd.Yaw*.02 + (Vel.X*Cos(Angle+90) + Vel.Y*Sin(Angle+90)*5);
					Player.GetPSprite(OverlayId()).X += invoker.FireSmokes[index].Vel.X;
				}
		TNT1 A 0 {invoker.FireSmokes[OverlayId()-PSP_FLASH-10].Destroy();invoker.FireSmokes[OverlayId()-PSP_FLASH-10]=Null;}
		Stop;
	
	spawn:
		REVL A -1;
		stop;
	CacheNewSprites:
		RVL1 A 0;
		RVL2 A 0;
		RVL3 A 0;
		RVL4 A 0;
		RVL5 A 0;
		RVL6 A 0;
		Stop;
		
	round1:RVR1 A 1 A_RoundReady(BUGS_CYL1);wait;
	round2:RVR2 A 1 A_RoundReady(BUGS_CYL2);wait;
	round3:RVR3 A 1 A_RoundReady(BUGS_CYL3);wait;
	round4:RVR4 A 1 A_RoundReady(BUGS_CYL4);wait;
	round5:RVR5 A 1 A_RoundReady(BUGS_CYL5);wait;
	round6:RVR6 A 1 A_RoundReady(BUGS_CYL6);wait;
	select0:
		REVG A 0{
			if(!countinv("NulledWeapon"))invoker.wronghand=false;
			A_TakeInventory("NulledWeapon");
			A_CheckRevolverHand();
			invoker.cylinderopen=false;
			invoker.weaponstatus[0]&=~BUGF_COCKED;

			//uncock all spare revolvers
			if(findinventory("SpareWeapons")){
				let spw=SpareWeapons(findinventory("SpareWeapons"));
				for(int i=0;i<spw.weapontype.size();i++){
					if(spw.weapontype[i]==invoker.getclassname()){
						string spw2=spw.weaponstatus[i];
						string spw1=spw2.left(spw2.indexof(","));
						spw2=spw2.mid(spw2.indexof(","));
						int stat0=spw1.toint();
						stat0&=~BUGF_COCKED;
						spw.weaponstatus[i]=stat0..spw2;
					}
				}
			}

			A_Overlay(BUGS_OVRCYL+BUGS_CYL1,"round1");
			A_Overlay(BUGS_OVRCYL+BUGS_CYL2,"round2");
			A_Overlay(BUGS_OVRCYL+BUGS_CYL3,"round3");
			A_Overlay(BUGS_OVRCYL+BUGS_CYL4,"round4");
			A_Overlay(BUGS_OVRCYL+BUGS_CYL5,"round5");
			A_Overlay(BUGS_OVRCYL+BUGS_CYL6,"round6");
		}
		---- A 1 A_Raise();
		---- A 1 {A_Raise(40);A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);}
		---- A 1 A_Raise(40);
		---- A 1 A_Raise(25);
		---- A 1 A_Raise(20);
		wait;
	deselect0:
		REVG A 0 A_CheckRevolverHand();
		#### D 0 A_JumpIf(!invoker.cylinderopen,"deselect0a");
		REVG F 1 A_CloseCylinder();
		REVG E 1;
		REVG A 0 A_CheckRevolverHand();
		goto deselect0a;
	deselect0a:
		#### AD 1 A_Lower();
		---- A 1 A_Lower(20);
		---- A 1 A_Lower(34);
		---- A 1 A_Lower(50);
		wait;
	ready:
		REVG A 0 A_CheckRevolverHand();
		---- A 0 A_JumpIf(invoker.cylinderopen,"readyopen");
		#### C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,2);
		#### A 0;
		---- A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER3|WRF_ALLOWUSER4);
		goto readyend;
	fire:
		#### A 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,"hammertime");
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<20)&&(Health>40),2);
		#### B 1 Offset(0,34) A_OverlayRotate(PSP_WEAPON, FRandom(-.5, .5), WOF_INTERPOLATE);
		#### B 1 offset(0,34) A_OverlayRotate(PSP_WEAPON, FRandom(-.5, .5), WOF_INTERPOLATE);
		#### C 1 offset(0,36) {A_RotateCylinder();A_OverlayRotate(PSP_WEAPON, FRandom(-.5, .5), WOF_INTERPOLATE);}
		#### C 1 Offset(0,35.5) A_OverlayRotate(PSP_WEAPON, FRandom(-.5, .5), WOF_INTERPOLATE);
		#### A 0 offset(0,32) A_OverlayRotate(PSP_WEAPON, 0, WOF_INTERPOLATE);
	hammertime:
		#### # 0 A_OverlayRotate(PSP_WEAPON, 0, WOF_INTERPOLATE);
		#### A 0 A_ClearRefire();
		#### A 1 A_FireRevolver();
		goto nope;
	firerecoil:
		#### D 2;
		#### A 0;
		goto nope;
	flash:
		REVF A 1 bright;
		---- A 0 A_Light0();
		---- A 0 setweaponstate("firerecoil");
		stop;
		RRVG ABCD 0;
		stop;
	RecoilLay:
		TNT1 A 1{
			Float Rand = FRandom(0, 1);
			A_OverlayPivot(PSP_WEAPON, invoker.WrongHand?1:0, Rand);A_OverlayPivot(PSP_WEAPON, invoker.WrongHand?1:0, Rand);
			A_OverlayScale(PSP_WEAPON, 1, 1);
			Player.GetPSprite(PSP_FLASH).Scale = Player.GetPSprite(PSP_WEAPON).Scale;
			Player.GetPSprite(PSP_FLASH).Rotation = Player.GetPSprite(PSP_WEAPON).Rotation;}
		TNT1 AAA 1{
				Float Dir = 1;
				if(invoker.WrongHand)Dir = -1;
				
				A_OverlayRotate(PSP_WEAPON, -.5*Dir, WOF_ADD);
				A_OverlayScale(PSP_WEAPON, .025, .05, WOF_ADD);
				Player.GetPSprite(PSP_FLASH).Rotation = Player.GetPSprite(PSP_WEAPON).Rotation;
				Player.GetPSprite(PSP_FLASH).Scale = Player.GetPSprite(PSP_WEAPON).Scale;
			}
		TNT1 A 3{A_OverlayRotate(PSP_WEAPON, 0, WOF_INTERPOLATE);
				A_OverlayScale(PSP_WEAPON, 1, 1, WOF_INTERPOLATE);}
		Stop;
	altfire:
		---- A 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,"uncock");
		#### K 2 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<20)&&(Health>40),2);
		#### L 2 offset(0,34){
			if(Player.GetPSprite(PSP_WEAPON).Sprite == GetSpriteIndex("RRVG")){A_OverlayRotate(PSP_WEAPON, -.5);A_WeaponOffset(-1, 34, WOF_INTERPOLATE);}
			else {A_OverlayRotate(PSP_WEAPON, .5);A_WeaponOffset(1, 34, WOF_INTERPOLATE);}
			A_OverlayScale(PSP_WEAPON, 1, 1.05);}
		#### L 1 offset(0,34){
			if(Player.GetPSprite(PSP_WEAPON).Sprite == GetSpriteIndex("RRVG")){A_OverlayRotate(PSP_WEAPON, -1);A_WeaponOffset(-2, 34, WOF_INTERPOLATE);}
			else {A_OverlayRotate(PSP_WEAPON, 1);A_WeaponOffset(2, 34, WOF_INTERPOLATE);}
			A_OverlayScale(PSP_WEAPON, 1, 1.1);
			A_ClearRefire();
			}
		#### L 2 offset(0,36){
			if(Player.GetPSprite(PSP_WEAPON).Sprite == GetSpriteIndex("RRVG")){A_OverlayRotate(PSP_WEAPON, -1.5);A_WeaponOffset(-3, 36, WOF_INTERPOLATE);}
			else {A_OverlayRotate(PSP_WEAPON, 1.5);A_WeaponOffset(3, 36, WOF_INTERPOLATE);}
			A_OverlayScale(PSP_WEAPON, 1, 1.15);
			A_RotateCylinder();
			}
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<20)&&(Health>40),2);
		#### M 1{
			if(Player.GetPSprite(PSP_WEAPON).Sprite == GetSpriteIndex("RRVG")){A_OverlayRotate(PSP_WEAPON, -.75);A_WeaponOffset(-1, 32, WOF_INTERPOLATE);}
			else {A_OverlayRotate(PSP_WEAPON, .75);A_WeaponOffset(1, 32, WOF_INTERPOLATE);}
			A_OverlayScale(PSP_WEAPON, 1, 1.05);}
		#### M 1{
			A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
			if(Player.GetPSprite(PSP_WEAPON).Sprite == GetSpriteIndex("RRVG")){A_OverlayRotate(PSP_WEAPON, -.5);A_WeaponOffset(-1, 32, WOF_INTERPOLATE);}
			else {A_OverlayRotate(PSP_WEAPON, .5);A_WeaponOffset(1, 32, WOF_INTERPOLATE);}
			A_OverlayScale(PSP_WEAPON, 1, 1.05);}
	cocked:
		#### C 0 {A_CockHammer();A_OverlayRotate(PSP_WEAPON, 0);A_OverlayScale(PSP_WEAPON, 1, 1);}
		---- A 0 A_JumpIf(pressingaltfire(),"nope");
		goto readyend;
	uncock:
		#### M 2 offset(0,38) A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		#### L 1 offset(0,34);
		#### K 2 offset(0,36) A_StartSound("weapons/deinocyl",8,CHANF_OVERLAP);
		#### A 0 {A_CockHammer(false);A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);}
		goto nope;
	HandOpenR:
		RVHB A 0 A_OverLayOffset(500, 0,30);
		#### C 1;
		#### CCC 1 A_OverlayOffset(OverlayId(), 14, -18, WOF_ADD);
		#### C 5 {if(!(invoker.weaponstatus[0]&BUGF_COCKED))A_SetTics(3);}
		Goto HandHoldCy2;
	HandOpen:
		RVHA C 1 A_OverlayOffset(OverlayId(), 19, 48);
		RVHA C 0 A_JumpIf(!(invoker.weaponstatus[0]&BUGF_COCKED),3);
		#### C 1 A_OverLayOffset(500, 13,15, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500, 7,10, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500, 2,5, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500, -5,0, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500,-12,-5, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500,-18,-7, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500,-21,-8, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500,-28,-9, WOF_INTERPOLATE);
		Goto HandHoldCyl;
	HandHoldCy2:
		---- A 0 A_JumpIf(Health < 1, "Non");
		RVHB A 1 A_OverLayOffset(500,0,0);
		Loop;
	HandHoldCyl:
		---- A 0 A_JumpIf(Health < 1, "Non");
		RVHA A 1 A_OverLayOffset(500,0,0);
		Loop;
	Non:
		TNT1 A 1;
		Stop;
	HandHoldCy2Rotate:
		---- A 0 A_JumpIf(Health < 1, "Non");
		RVHB B 1 A_OverLayOffset(500,0,0);
		Loop;
	HandHoldCylRotate:
		---- A 0 A_JumpIf(Health < 1, "Non");
		RVHA B 1 A_OverLayOffset(500,0,0);
		Loop;
	HandCloseR:
		SHHA E 1 A_OverLayOffset(500,-5,0);
		SHHA E 2 A_OverLayOffset(500,-5,0, WOF_INTERPOLATE);
		SHHA E 2 A_OverLayOffset(500,-7,0, WOF_INTERPOLATE);
		RVHB C 2 A_OverLayOffset(500,20,0);
		#### CCC 1 A_OverLayOffset(500,-10,15, WOF_ADD);
		Stop;
	HandClose:
		RVHA C 0 A_OverLayOffset(500,-18,-7);
		#### C 1 A_OverLayOffset(500,-1,2);
		#### CCCC 1 A_OverLayOffset(500, 16,18, WOF_ADD);
		Stop;
	HandLoadRndR:
		RVHB C 1 A_OverLayOffset(500,52,0);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<12)&&(Health>40),2);
		//#### C 1 A_OverLayOffset(500,48,6);
		#### C 1 A_OverLayOffset(500,30,28, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500,26,48, WOF_INTERPOLATE);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<12)&&(Health>40),5);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<20)&&(Health>40),4);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<30)&&(Health>30),2);
		#### X 1;
		#### X 1;
		#### X 1;
		#### D 1 A_OverLayOffset(500,7,38);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<30)&&(Health>40),2);
		#### D 1 A_OverLayOffset(500,5,31, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500,5,24, WOF_INTERPOLATE);
		#### E 1 A_OverLayOffset(500,1,7);
		//#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<17)&&(Health>40),2);
		//#### E 1 A_OverLayOffset(500,0,4);
		#### E 1 {A_OverLayOffset(500,1,0, WOF_INTERPOLATE);A_OverlayPivot(OverlayID(), .5, .5);A_OverlayScale(OverlayID(), .95, .95, WOF_INTERPOLATE);}
		#### E 0 A_LoadRound();
		#### E 2 {A_OverLayOffset(500,0,1, WOF_INTERPOLATE);A_OverlayScale(OverlayID(), 1, 1, WOF_INTERPOLATE);}
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<12)&&(Health>40),2);
		//#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<30)&&(Health>30),2);
		//#### E 1 A_OverLayOffset(500,0,2);
		#### E 1 A_OverLayOffset(500,-1,1, WOF_INTERPOLATE);
		#### E 1 A_OverLayOffset(500,1,2, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500,1,1);
		#### C 1 A_OverLayOffset(500,40,-9);
		#### C 1 A_OverLayOffset(500,50,-8, WOF_INTERPOLATE);
		#### C 0 setweaponstate("open_rotatecylinderRight");
		Stop;
		//#### A 0 A_JumpIf(HDPlayerPawn(self).beatcount>10,2);
	HandLoadRnd:
		RVHA C 0;
		#### C 1 A_OverLayOffset(500,-32,0);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<12)&&(Health>40),2);
		#### C 1 A_OverLayOffset(500,-31,6, WOF_INTERPOLATE);
		//#### C 1 A_OverLayOffset(500,-31,18);
		#### C 1 A_OverLayOffset(500,-30,38, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500,-30,60, WOF_INTERPOLATE);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<12)&&(Health>40),5);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<20)&&(Health>40),4);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<30)&&(Health>30),2);
		#### X 1;
		#### X 1;
		#### X 1;
		#### D 1 A_OverLayOffset(500,7,38);
		//#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<30)&&(Health>40),2);
		//#### D 1 A_OverLayOffset(500,8,31);
		#### D 1 A_OverLayOffset(500,3,18, WOF_INTERPOLATE);
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<17)&&(Health>40),2);
		#### E 1 A_OverLayOffset(500,4,11);
		#### E 1 A_OverLayOffset(500,2,1, WOF_INTERPOLATE);
		#### E 2 {A_OverLayOffset(500,1,0, WOF_INTERPOLATE);A_OverlayPivot(OverlayId(), .5, .5);A_OverlayScale(OverlayId(), .95, .95, WOF_INTERPOLATE);}
		#### E 0 A_LoadRound();
		#### E 2 {A_OverLayOffset(500,0,4, WOF_INTERPOLATE);A_OverlayScale(OverlayId(), 1, 1, WOF_INTERPOLATE);}
		#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<12)&&(Health>40),2);
		//#### A 0 A_JumpIf((HDPlayerPawn(self).bloodpressure<30)&&(Health>30),2);
		//#### E 1 A_OverLayOffset(500,0,2);
		#### E 1 A_OverLayOffset(500,0,0, WOF_INTERPOLATE);
		#### A 1 A_OverLayOffset(500,0,0);
		#### C 0 setweaponstate("open_rotatecylinder");
		Stop;
	HandUnload1R:
		RVHB C 1 A_OverLayOffset(500,50,-18);
		#### C 1 A_OverLayOffset(500,44,-14, WOF_INTERPOLATE);
		Stop;
	HandUnload1:
		RVHA C 1 A_OverLayOffset(500,-30,-8);
		#### C 1 A_OverLayOffset(500,-24,-8, WOF_INTERPOLATE);
		Stop;
	HandUnload2R://Hit Extractor
		RVHB A 0;
		#### C 1 A_OverLayOffset(-20,41,-18);
		#### C 1 A_OverLayOffset(-20,37,-14, WOF_INTERPOLATE);
		#### F 1 {A_OverLayOffset(-20,0,0);A_OverlayPivot(OverlayId(), .5, .5); A_OverlayScale(OverlayId(), 1.15, 1.15);}
		#### F 1 A_OverlayScale(OverlayId(), 1.2, 1.2);
		#### F 1;
		#### F 2 A_OverlayScale(OverlayId(), 1.16, 1.16, WOF_INTERPOLATE);
		#### C 1 {A_OverLayOffset(-20,41,-14);A_OverlayScale(OverlayId(), .9, .9);}
		#### C 1 A_OverLayOffset(-20,48,-18, WOF_INTERPOLATE);
		Stop;
	HandUnload2://Hit Extractor
		RVHA C 0;
		#### C 1 A_OverLayOffset(-20,-21,-8);
		#### C 1 A_OverLayOffset(-20,-28,-9, WOF_INTERPOLATE);
		#### F 1 {A_OverLayOffset(-20,0,0);A_OverlayPivot(OverlayId(), .5, .5); A_OverlayScale(OverlayId(), 1.1, 1.1);}
		#### F 1 A_OverlayScale(OverlayId(), 1.15, 1.15);
		#### F 1;
		#### F 2 {A_OverLayOffset(-20,0,0, WOF_INTERPOLATE);A_OverlayScale(OverlayId(), 1.11, 1.11, WOF_INTERPOLATE);}
		#### C 1 {A_OverLayOffset(-20,-28,-9);A_OverlayScale(OverlayId(), .9, .9);}
		#### C 1 A_OverLayOffset(-20,-21,-8, WOF_INTERPOLATE);
		Stop;
		
	reload:
	unload:
		#### A 0;
		#### A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"openRight");
		---- A 0 A_OverLay(500,"HandOpen");
		#### C 0 A_JumpIf(!(invoker.weaponstatus[0]&BUGF_COCKED),2);
		#### B 2 offset(0,35)A_CockHammer(false);
		#### A 2 offset(0,33);
		#### A 1 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		REVG E 2 A_OpenCylinder();
		goto readyopen;
	openRight:
		---- A 0 A_OverLay(500,"HandOpenR");
		#### C 0 A_JumpIf(!(invoker.weaponstatus[0]&BUGF_COCKED),2);
		#### B 2 offset(0,35)A_CockHammer(false);
		#### A 2 offset(0,33) A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		#### A 1;
		RRVG H 2 A_OpenCylinder();
		goto readyopenright;
	openslow:
		---- A 0 A_OverLay(500,"HandOpen");
		REVG A 1 offset(2,39);
		REVG A 1 offset(4,50);
		REVG A 1 offset(8,64);
		REVG A 1 offset(10,86);
		REVG A 1 offset(12,96);
		REVG E 1 offset(-7,66);
		REVG E 1 offset(-6,56);
		REVG E 1 offset(-2,40);
		REVG E 1 offset(0,32);
		REVG E 1 A_OpenCylinder();
		goto readyopen;
	readyopen:
		#### A 0 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		---- A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"readyopenRight");
		---- A 0 A_OverLay(500,"HandHoldCyl");
		REVG F 1 A_ReadyOpen();
		goto readyend;
	readyopenright:
		---- A 0 A_OverLay(500,"HandHoldCy2");
		RRVG I 1 A_ReadyOpen();
		goto readyend;
	open_rotatecylinder:
		---- A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"open_rotatecylinderRight");
		---- A 0 A_OverLay(500,"HandHoldCylRotate");
		REVG G 2 A_RotateCylinder(pressingzoom());
		---- A 0 A_OverLay(500,"HandHoldCyl");
		REVG F 2 A_JumpIf(!pressingaltfire(),"readyopen");
		loop;
	open_rotatecylinderRight:
		---- A 0 A_OverLay(500,"HandHoldCy2Rotate");
		RRVG J 2 A_RotateCylinder(pressingzoom());
		---- A 0 A_OverLay(500,"HandHoldCy2");
		RRVG I 2 A_JumpIf(!pressingaltfire(),"readyopenRight");
		loop;
	open_loadround:
		---- A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"open_loadroundRight");
		REVG F 1;
		---- A 0{if(invoker.weaponstatus[BUGS_CYL1]>0) setweaponstate("open_rotatecylinder");}	
		---- A 0 A_OverLay(500,"HandLoadRnd");
		REVG F 40;
		goto open_rotatecylinder;
	open_loadroundRight:
		RRVG I 1;
		---- A 0{if(invoker.weaponstatus[BUGS_CYL1]>0) setweaponstate("open_rotatecylinderRight");}	
		---- A 0 A_OverLay(500,"HandLoadRndR");
		RRVG I 40;
		goto open_rotatecylinderRight;
	open_closecylinder:
		---- A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"open_closecylinderRight");
		---- A 0 A_OverLay(500,"HandClose");
		REVG E 2 A_JumpIf(pressingfire(),"open_fastclose");
		REVG E 0 A_CloseCylinder();
		REVG A 0 A_CheckRevolverHand();
		#### A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"nope");
		REVG E 1 offset(0,32);
		REVG E 1 offset(-2,40);
		REVG E 1 offset(-6,56);
		REVG E 1 offset(-7,66);
		REVG A 1 offset(12,96) A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		REVG A 1 offset(10,86);
		REVG A 1 offset(8,64);
		REVG A 1 offset(4,50);
		REVG A 1 offset(2,39);
		goto nope;
	open_closecylinderRight:
		---- A 0 A_OverLay(500,"HandCloseR");
		RRVG H 2 A_JumpIf(pressingfire(),"open_fastcloseRight");
		RRVG E 0 A_CloseCylinder();
		RRVG A 0 A_CheckRevolverHand();
		#### A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"nope");
		RRVG H 1 offset(0,32);
		RRVG H 1 offset(-2,40);
		RRVG H 1 offset(-6,56);
		RRVG H 1 offset(-7,66);
		REVG A 1 offset(12,96) A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		REVG A 1 offset(10,86);
		REVG A 1 offset(8,64);
		REVG A 1 offset(4,50);
		REVG A 1 offset(2,39);
		goto nope;
	open_fastclose:
		REVG E 2;
		REVG A 0{
			A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
			A_CloseCylinder();
			//invoker.wronghand=(Wads.CheckNumForName("id",0)!=-1);
			A_CheckRevolverHand();
		}goto nope;
	open_fastcloseRight:
		RRVG H 2;
		REVG A 0{
			A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
			A_CloseCylinder();
			//invoker.wronghand=(Wads.CheckNumForName("id",0)!=-1);
			A_CheckRevolverHand();
		}goto nope;
	open_dumpcylinder:
		---- A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"open_dumpcylinderRight");
		REVG F 1;
		---- A 0 A_OverLay(500,"HandUnload1");
		REVG F 2;
		---- A 0 {if(!
				(
					invoker.weaponstatus[BUGS_CYL1]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL2]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL3]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL4]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL5]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL6]==BUGS_MASTERBALLSPENT
					
				)&&!(
					invoker.weaponstatus[BUGS_CYL1]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL2]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL3]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL4]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL5]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL6]==BUGS_NINEMILSPENT
					))setweaponstate("readyopen");
				else A_OverLay(-20,"HandUnload2");}
		REVG F 3;
		REVG F 3 A_HitExtractor();
		REVG F 3 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		goto readyopen;
	open_dumpcylinderRight:
		RRVG I 1;
		---- A 0 A_OverLay(500,"HandUnload1R");
		RRVG I 2;
		---- A 0 {if(!
				(
					invoker.weaponstatus[BUGS_CYL1]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL2]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL3]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL4]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL5]==BUGS_MASTERBALLSPENT
					||invoker.weaponstatus[BUGS_CYL6]==BUGS_MASTERBALLSPENT
					
				)&&!(
					invoker.weaponstatus[BUGS_CYL1]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL2]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL3]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL4]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL5]==BUGS_NINEMILSPENT
					||invoker.weaponstatus[BUGS_CYL6]==BUGS_NINEMILSPENT
					))setweaponstate("readyopenRight");
				else A_OverLay(-20,"HandUnload2R");}
		RRVG I 3;
		RRVG I 3 A_HitExtractor();
		RRVG I 3 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		goto readyopenRight;
	HandUnload3R://Take all Rounds
		RVHB A 0;
		#### C 1 A_OverLayOffset(500, 50, 0);
		#### C 1 A_OverLayOffset(500, 45, 0, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 0);
		#### D 1 A_OverLayOffset(500, 0, 10, WOF_INTERPOLATE);
		#### E 1 A_OverLayOffset(500, 0, 16);
		#### E 1 A_OverLayOffset(500, 0, 20, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 15);
		#### D 1 A_OverLayOffset(500, 0, 10, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 20, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 40, WOF_INTERPOLATE);
		---- A 1 A_OverLayOffset(500, 0, 10);
		#### C 1 A_OverLayOffset(500, 30, 30);
		#### C 1 A_OverLayOffset(500, 40, 20, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500, 50, 10, WOF_INTERPOLATE);
		Stop;
	HandUnload3://Take all Rounds
		RVHA C 1 A_OverLayOffset(500, -30, 0);
		#### C 1 A_OverLayOffset(500, -35, 0, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 0);
		#### D 1 A_OverLayOffset(500, 0, 0, WOF_INTERPOLATE);
		#### E 1 A_OverLayOffset(500, 0, 20);
		#### E 1 A_OverLayOffset(500, 0, 20, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 20);
		#### D 1 A_OverLayOffset(500, 0, 20, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 30, WOF_INTERPOLATE);
		#### D 1 A_OverLayOffset(500, 0, 50, WOF_INTERPOLATE);
		---- A 1 A_OverLayOffset(500, 0, 20);
		#### C 1 A_OverLayOffset(500, -30, 30);
		#### C 1 A_OverLayOffset(500, -30, 20, WOF_INTERPOLATE);
		#### C 1 A_OverLayOffset(500, -30, 10, WOF_INTERPOLATE);
		Stop;
	open_dumpcylinder_all:
		---- A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"open_dumpcylinder_allRight");
		REVG F 1;
		---- A 0 {if(!
				(
					invoker.weaponstatus[BUGS_CYL1]>0
					||invoker.weaponstatus[BUGS_CYL2]>0
					||invoker.weaponstatus[BUGS_CYL3]>0
					||invoker.weaponstatus[BUGS_CYL4]>0
					||invoker.weaponstatus[BUGS_CYL5]>0
					||invoker.weaponstatus[BUGS_CYL6]>0
				)) setweaponstate("readyopen");}
		---- A 0 A_OverLay(500,"HandUnload3");
		REVG F 1 offset(0,34);
		REVG F 1 offset(0,42);
		REVG F 1 offset(0,54);
		REVG F 1 offset(0,68);
		TNT1 A 6 {A_ExtractAll();A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);}
		REVG F 1 offset(0,68);
		REVG F 1 offset(0,54)A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		REVG F 1 offset(0,42);
		REVG F 1 offset(0,34);
		goto readyopen;
	open_dumpcylinder_allRight:
		RRVG I 1;
		---- A 0 {if(!
				(
					invoker.weaponstatus[BUGS_CYL1]>0
					||invoker.weaponstatus[BUGS_CYL2]>0
					||invoker.weaponstatus[BUGS_CYL3]>0
					||invoker.weaponstatus[BUGS_CYL4]>0
					||invoker.weaponstatus[BUGS_CYL5]>0
					||invoker.weaponstatus[BUGS_CYL6]>0
				)) setweaponstate("readyopenRight");}
		---- A 0 A_OverLay(500,"HandUnload3R");
		RRVG I 1 offset(0,34);
		RRVG I 1 offset(0,42);
		RRVG I 1 offset(0,54);
		RRVG I 1 offset(0,68);
		TNT1 A 6 {A_ExtractAll();A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);}
		RRVG I 1 offset(0,68);
		RRVG I 1 offset(0,54)A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		RRVG I 1 offset(0,42);
		RRVG I 1 offset(0,34);
		goto readyopenRight;

	user1:
	user2:
	swappistols:
		#### # 0  A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		---- A 0 A_SwapHandguns();
		#### D 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("RRVGA0"),"swappistols2");
	swappistols1:
		TNT1 A 0 A_Overlay(1025,"raiseright");
		TNT1 A 0 A_Overlay(1026,"lowerleft");
		TNT1 A 5 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		RRVG C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED, 2);
		RRVG A 0;
		#### # 1;
		#### # 0 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		goto nope;
	swappistols2:
		TNT1 A 0 A_Overlay(1025,"raiseleft");
		TNT1 A 0 A_Overlay(1026,"lowerright");
		TNT1 A 5 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		REVG C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED, 2);
		REVG A 0;
		#### # 1;
		#### # 0 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		goto nope;
	lowerleft:
		REVG C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,2);
		REVG A 0;
		---- A 1 offset(-6,38);
		---- A 1 offset(-12,48) A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, 1);
		REVG D 1 offset(-20,60);
		REVG D 1 offset(-34,76);
		REVG D 1 offset(-50,86);
		stop;
	lowerright:
		RRVG C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,2);
		RRVG A 0;
		---- A 1 offset(6,38);
		---- A 1 offset(12,48) A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, 1);
		RRVG D 1 offset(20,60);
		RRVG D 1 offset(34,76);
		RRVG D 1 offset(50,86);
		stop;
	raiseleft:
		REVG D 1 offset(-50,86);
		REVG D 1 offset(-34,76) A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, 1);
		REVG C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,2);
		REVG A 0;
		---- A 1 offset(-20,60);
		---- A 1 offset(-12,48);
		---- A 1 offset(-6,38);
		stop;
	raiseright:
		RRVG D 1 offset(50,86);
		RRVG D 1 offset(34,76) A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, 1);
		RRVG C 0 A_JumpIf(invoker.weaponstatus[0]&BUGF_COCKED,2);
		RRVG A 0;
		---- A 1 offset(20,60);
		---- A 1 offset(12,48);
		---- A 1 offset(6,38);
		stop;
	whyareyousmiling:
		#### D 1 offset(0,38);
		#### D 1 offset(0,48);
		#### D 1 offset(0,60);
		TNT1 A 7;
		REVG A 0{
			invoker.wronghand=!invoker.wronghand;
			A_CheckRevolverHand();
		}
		#### D 1 offset(0,60);
		#### D 1 offset(0,48);
		#### D 1 offset(0,38);
		goto nope;
	}
}