//-------------------------------------------------
// Frag on a string: the real IED
//-------------------------------------------------
class NSHTripwireFrag:TripwireFrag Replaces TripwireFrag{
	default{
		tripwire.weptype "NSHFragGrenades";
	}
	
	override void loadoutconfigure(String input)
	{
		if(Owner && Owner.FindInventory("TripwireFrag"))
		{
			HDWeapon(Owner.FindInventory("TripwireFrag")).Destroy();
			Return;
		}
		Super.LoadOutConfigure(input);
	}
	
	override string gethelptext()
	{
		if(!Cvar.GetCVar("mrnsha_binds", Owner.Player).GetBool())LocalizeHelp();
		else
		{
			MRHD_WeapAnimsHandler Handler = MRHD_WeapAnimsHandler(EventHandler.Find("MRHD_WeapAnimsHandler"));
			
			if(Handler)Handler.MRHD_GetWeaponKeyBinds(Self);
		}
		
		return
		LWPHELP_FIRE..StringTable.Localize("$TRPWH_FIRE")..(gumspot?StringTable.Localize("$TRPWH_GRENADE"):StringTable.Localize("$TRPWH_ENDOFSTRING")).."\n"
		..LWPHELP_ALTFIRE..StringTable.Localize("$TRPWH_ALTFIRE")
		;
	}
	
	states{
	altfire:
		TNT1 A 0 UndoAll();
		goto nope;
	Non:
	None:
		TNT1 A 1;
		Stop;
	HandTakeGum:
		GRNH E 1 A_OverLayOffset(26,-40,40);
		GRNH EEE 1 A_OverLayOffset(26,10,-10, WOF_ADD);
		Goto HandGum;
	HandGum:
		TNT1 A 0 A_JumpIf(Invoker.gumspot, "None");
		---- A 0 A_JumpIf(Health < 1, "Non");
		GRNH E 1 A_OverLayOffset(26,0,0);
		Loop;
	HandPlaceGum:
		GRNH E 1 A_OverLayOffset(26,2,-2);
		GRNH E 1 A_OverLayOffset(26,5,-5, WOF_INTERPOLATE);
		GRNH E 2 A_OverLayOffset(26,10,-10, WOF_INTERPOLATE);
		GRNH C 1 A_OverLayOffset(26,5,-10);
		GRNH C 1 A_OverLayOffset(26,-5,0, WOF_INTERPOLATE);
		GRNH C 1 A_OverLayOffset(26,-15,10, WOF_INTERPOLATE);
		GRNH C 1 A_OverLayOffset(26,-20,20, WOF_INTERPOLATE);
		GRNH C 1 A_OverLayOffset(26,-25,30, WOF_INTERPOLATE);
		Stop;
	GrenadeUpL:
		TNT1 A 7;
		GRNG A 1 A_OverLayOffset(25,25,40);
		GRNG AAA 1 A_OverLayOffset(25,-5,-10, WOF_ADD);
	GrenadeRed:
		TNT1 A 0 A_JumpIf(invoker.grenade==null, "None");
		---- A 0 A_JumpIf(Health < 1, "Non");
		GRNG A 1 A_OverLayOffset(25,0,0);
		Loop;
	GrenadeDown:
		GRNG A 1 A_OverLayOffset(25,10,10);
		GRNG AAA 1 A_OverLayOffset(25,5,10, WOF_ADD);
		Stop;
	HandPlaceGrenade:
		GRNG A 1 A_OverLayOffset(25,-10,-5);
		GRNG A 1 A_OverLayOffset(25,-20,-13, WOF_INTERPOLATE);
		GRNG A 1 A_OverLayOffset(25,-25,-18, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,-60,-40);
		BFHA D 1 A_OverLayOffset(25,-54,-28, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,-46,-19, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,-38,-7, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,-29,9, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,-20,21, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,-10,32, WOF_INTERPOLATE);
		BFHA D 1 A_OverLayOffset(25,2,44, WOF_INTERPOLATE);
		Stop;
	deselect0:
		TNT1 A 0 {UndoAll();A_StartSound("weapons/pocket",9);}
		TNT1 AAAA 1{
			A_WeaponOffset(-20, +20, WOF_ADD|WOF_INTERPOLATE);
			if(countinv("NulledWeapon"))A_SetTics(0);
		}goto super::deselect0;
	select:
		TNT1 A 0{
			bool helptext=DoHelpText();
			if(!countinv(invoker.grenadeammotype)){
				if(helptext)A_Print("No grenades.");
				A_SelectWeapon("HDFist");
			}else if(helptext)A_WeaponMessage(StringTable.Localize("$TRIPWIRETXT"));
			A_StartSound("weapons/pocket",9);
			if(countinv("NulledWeapon"))A_SetTics(0);
			A_OverLay(26, "HandTakeGum");
			A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		}
		goto super::select;
	Ready:
		TNT1 A 1{
			if(!countinv(invoker.grenadeammotype))A_SelectWeapon("HDFist");
			else A_SetCrosshair(0);
			A_WeaponBusy(invoker.gumspot!=null);
			A_WeaponReady(WRF_ALLOWUSER3);
		}goto readyend;
	fire:
		TNT1 A 8{
			flinetracedata gumline;
			linetrace(
				angle,64,pitch,flags:0,
				offsetz:gunheight(),
				data:gumline
			);
			let othersector=hdmath.oppositesector(gumline.hitline,gumline.hitsector);
			if(
				gumline.hittype==Trace_HitNone
				||(
					gumline.hittype!=Trace_HitWall
					&&gumline.hittype!=Trace_HitFloor
					&&gumline.hittype!=Trace_HitCeiling
				)||hdf.linetracehitsky(gumline)
			){
				A_Log(string.format(StringTable.Localize("$TRIPWIRETXT1"),
					invoker.gumspot?StringTable.Localize("$TRIPWIRETXT2"):StringTable.Localize("$TRIPWIRETXT3")
				),true);
				return;
			}
			if(!invoker.gumspot){
				actor aaa=spawn("GumAndString",gumline.hitlocation-gumline.hitdir*0.6,ALLOW_REPLACE);
				aaa.target=self;aaa.master=self;aaa.angle=angle;
				aaa.A_StartSound("tripwire/gumsplat",CHAN_BODY);
				invoker.gumspot=aaa;
				A_OverLay(26, "HandPlaceGum");
				A_Log(StringTable.Localize("$TRIPWIRETXT4"),true);
				A_OverLay(25, "GrenadeUpL");
			}else{
				actor aaa=spawn(invoker.throwtype,gumline.hitlocation-gumline.hitdir*2,ALLOW_REPLACE);
				aaa.target=self;aaa.master=self;aaa.angle=angle;
				aaa.A_StartSound("tripwire/fragclick",CHAN_BODY);
				invoker.grenade=aaa;
				invoker.gumspot.tracer=invoker.grenade;
				invoker.grenade.tracer=invoker.gumspot;
				invoker.grenade.master=self;
				invoker.grenade.target=self;
				A_Log(StringTable.Localize("$TRIPWIRETXT5"),true);
				A_TakeInventory(invoker.grenadeammotype,1,TIF_NOTAKEINFINITE);
				invoker.gumspot=null;
				A_OverLay(25, "HandPlaceGrenade");
				A_OverLay(26, "HandTakeGum");
			}
		}goto nope;
	}
}