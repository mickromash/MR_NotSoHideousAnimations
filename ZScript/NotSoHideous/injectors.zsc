//-------------------------------------------------
// Stims and berserk
//-------------------------------------------------
class NSHPortableStimpack:PortableStimpack Replaces PortableStimpack{
	Bool FromMedikit;
	states(actor){
	//don't use a CreateTossable override - we need the throwing stuff
	spawn:
		TNT1 A 1; //DO NOT REMOVE DELAY
		TNT1 A 0{
			if(weaponstatus[0]&INJECTF_SPENT){
				actor aa=spawn(spentinjecttype,pos,ALLOW_REPLACE);
				if(!aa)return;
				aa.target=target;aa.angle=angle;aa.pitch=pitch;aa.vel=vel;
				aa.A_StartSound("misc/stimdrop",CHAN_VOICE);
			}else setstatelabel("spawn2");
		}
		stop;
	spawn2:
		STIM A -1;
		stop;
	}
	override string gethelptext()
	{
		if(!Cvar.GetCVar("mrnsha_binds", Owner.Player).GetBool())LocalizeHelp();
		else
		{
			MRHD_WeapAnimsHandler Handler = MRHD_WeapAnimsHandler(EventHandler.Find("MRHD_WeapAnimsHandler"));
			
			if(Handler)Handler.MRHD_GetWeaponKeyBinds(Self);
		}
		return LWPHELP_INJECTOR;
	}
	
	override void loadoutconfigure(string input){
		if(Owner && Owner.FindInventory("PortableStimpack"))
		{
			Let inv = HDWeapon(Owner.FindInventory("PortableStimpack"));
			Owner.RemoveInventory(inv);
			Return;
		}
		super.loadoutconfigure(input);
	}
		
	Override Bool AddSpareWeapon(Actor NewOwner)
	{
		if(FromMedikit){FromMedikit = false;Destroy();Return false;}
		Return Super.AddSpareWeapon(NewOwner);
	}
		
	action void A_InjectorReachDown(){
		if(hdplayerpawn(self))hdplayerpawn(self).gunbraced=false;
		if(invoker.weaponstatus[0]&INJECTF_SPENT){
			setweaponstate("nope");
			return;
		}
		let blockinv=HDWoundFixer.CheckCovered(self,CHECKCOV_ONLYFULL);
		if(blockinv){
			A_TakeOffFirst(blockinv.gettag(),2);
			setweaponstate("nope");
			return;
		}
		if(pitch<55){
			A_MuzzleClimb(0,8);
			A_Refire();
			return;
		}
		setweaponstate("inject");
	}

	action void A_InjectorInject(actor agent,actor patient){invoker.InjectorInject(agent,patient);}
	action void A_InjectorEffect(actor patient){invoker.InjectorEffect(patient);}

	states{
	select0:
		STIS A 0 A_JumpIf(invoker.InjectType=="InjectStimDummy", 2);
		TNT1 A 0 A_Jump(256, "BerserkSelect");
		#### A 1{
			if(DoHelpText())A_WeaponMessage(Stringtable.Localize(invoker.mainhelptext));
			A_StartSound("weapons/pocket",8,CHANF_OVERLAP,volume:0.5);
		}
		#### A 1 A_Raise(10);
		#### # 0 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		#### A 1 A_Raise(18);
		#### A 1 A_Raise(10);
		//Goto Open;
	Open:
		#### A 0 A_StartSound("weapons/pocket",8,CHANF_OVERLAP,volume:0.7);
		#### BBBCCDD 1 A_WeaponReady(WRF_NOFIRE);
		#### A 0 A_StartSound("weapons/pocket",8,CHANF_OVERLAP,volume:0.7);
		#### EEFGG 1;
		#### # 0 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 0);
		#### HHII 1;
		STIG A 0 A_JumpIf(invoker.InjectType=="InjectStimDummy", 2);
		STI1 A 0;
		#### A 0;
		Goto ReadyEnd;
	deselect:
		TNT1 A 0{
			if(invoker.weaponstatus[0]&INJECTF_SPENT){
				DropInventory(invoker);
				return;
			}
		}
		STIG A 0 A_JumpIf(invoker.InjectType=="InjectStimDummy", 2);
		STI1 A 0;
		#### A 1 offset(6,56);
		#### A 1 offset(13,66);
		#### A 1 offset(24,106);
		#### A 1 offset(30,156);
		#### A 1 offset(0,0)A_StartSound("weapons/pocket",8,CHANF_OVERLAP,volume:0.5);
		#### A 3 offset(0,0)A_Lower(999);
		wait;
	BerserkSelect:
		#### A 0 A_StartSound("weapons/pocket",8,CHANF_OVERLAP,volume:0.7);
		STI1 A 1 offset(20, 60)A_Raise(9);
		STI1 A 1 offset(10, 50)A_Raise(20);
		STI1 A 1 offset(1, 32)A_Raise(30);
	ready:
		#### A 0 A_JumpIf(player.getpsprite(PSP_WEAPON).sprite==getspriteindex("STISA0"),"Open");
		STIG A 0 A_JumpIf(invoker.InjectType=="InjectStimDummy", 2);
		STI1 A 0;
		#### A 1{
			if(invoker.weaponstatus[0]&INJECTF_SPENT)DropInventory(invoker);
			A_WeaponReady();
		}
		#### # 0 A_OverlayFlags(PSP_WEAPON, PSPF_INTERPOLATE, 1);
		goto readyend;
	Non:
		TNT1 A 1;
		Stop;
	Leg:
		#### # 0 {
			A_OverlayFlags(OverlayId(), PSPF_RENDERSTYLE, 1);
			String Kick = 'MR_uKickToken';
			if((class<Actor>)(Kick) && 
				CVar.GetCVar("MR_UKickFPLegs", Player) && CVar.GetCVar("MR_UKickFPLegs", Player).GetBool())A_OverlayRenderStyle(OverlayId(), STYLE_NONE);}
		PBLG B 0 A_JumpIf(Health < 1, "Non");
		PBLG B 0 A_JumpIf(Height < 40 && IsMoving.Count(self)>0, "LegCrouMov");
		PBLG B 0 A_JumpIf(Height < 40, 2);
		PBLG A 0 A_JumpIf(IsMoving.Count(self)>0,3);
		PBLG # 1 {A_OverlayFlags(-26,PSPF_PLAYERTRANSLATED,1);A_OverlayOffset(-26, 0, (-pitch*2)+200);}
		Loop;
		#### AAA 0;
		WALK GHHIIJJKLL 2 {A_OverlayFlags(-26,PSPF_PLAYERTRANSLATED,1);A_OverlayOffset(-26, 0, (-pitch*2)+200); if(IsMoving.Count(self)<2)A_SetTics(4);}
		PBLG A 0 A_JumpIf(IsMoving.Count(self)<1,"Leg");
		WALK BCCDDEEF 2 {A_OverlayFlags(-26,PSPF_PLAYERTRANSLATED,1);A_OverlayOffset(-26, 0, (-pitch*2)+200);if(IsMoving.Count(self)<2)A_SetTics(4);}
		PBLG A 0 A_JumpIf(IsMoving.Count(self)<1,"Leg");
		WALK F 2 {A_OverlayFlags(-26,PSPF_PLAYERTRANSLATED,1);A_OverlayOffset(-26, 0, (-pitch*2)+200);if(IsMoving.Count(self)<2)A_SetTics(4);}
		Goto Leg;
	Crouch:
		STIF NO 2;
		STIF P 2{
			A_SetBlend("7a 3a 18",0.1,4);
			A_MuzzleClimb(0,2);
			if(hdplayerpawn(self))A_StartSound(hdplayerpawn(self).medsound,CHAN_VOICE);
			else A_StartSound("*usemeds",CHAN_VOICE);
			A_StartSound("misc/injection",CHAN_WEAPON,CHANF_OVERLAP);
			actor a=spawn(invoker.injecttype,pos,ALLOW_REPLACE);
			a.accuracy=40;a.target=self;
			invoker.weaponstatus[0]|=INJECTF_SPENT;}
		STIF PQ 2;
		STIF QRR 1 A_MuzzleClimb(0,-10);
		TNT1 AAA 1 A_MuzzleClimb(0,-10);
		TNT1 A 0 A_OverLay(-26,"Non");
		goto nope;
	LegCrouMov:
		#### AAA 0;
		CROU ABBA 3 {A_OverlayFlags(-26,PSPF_PLAYERTRANSLATED,1);A_OverlayOffset(-26, 0, (-pitch*2)+200);if(IsMoving.Count(self)<2)A_SetTics(5);}
		Goto Leg;
	fire:
	hold:
		#### A 0 A_OverLay(-26,"Leg");
		#### A 1;
		#### A 0 A_InjectorReachDown();
		goto nope;
	inject:
		TNT1 A 0 A_JumpIf(Height < 40, "Crouch");
		STIF CD 2;
		STIF E 2 A_InjectorInject(self,self);
		STIF F 4;
		STIF GGG 1 A_MuzzleClimb(0,-10);
		TNT1 AAA 1 A_MuzzleClimb(0,-10);
		TNT1 A 0 A_OverLay(-26,"Non");
		goto nope;
	altfire:
		STIF C 2;
		TNT1 A 0 A_Refire();
		goto nope;
	althold:
		STIF H 2;
		TNT1 A 0{
			bool helptext=DoHelpText();
			flinetracedata injectorline;
			linetrace(
				angle,42,pitch,
				offsetz:gunheight()-2,
				data:injectorline
			);
			let c=HDPlayerPawn(injectorline.hitactor);
			if(!c){
				let ccc=HDHumanoid(injectorline.hitactor);
				if(
					ccc
					&&invoker.getclassname()=="HDportableStimPack"
				){
					if(
						ccc.stunned<100
						||ccc.health<10
					){
						if(helptext)A_WeaponMessage("They don't need it.",2);
						return resolvestate("UnInject");
					}
					return resolvestate("Injecting");
				}}
				if(helptext)A_WeaponMessage(Stringtable.Localize("$STIMPACK_NOTHINGTOBEDONE"));
				return resolvestate("UnInject");
			}
		Goto Injection;	
		Injecting:
		STIF HIJ 2;
		TNT1 A 0{bool helptext=DoHelpText();
			flinetracedata injectorline;
			linetrace(
				angle,42,pitch,
				offsetz:gunheight()-2,
				data:injectorline
			);
			let ccc=HDHumanoid(injectorline.hitactor);
					ccc.A_StartSound(ccc.painsound,CHAN_VOICE);
					ccc.stunned=max(0,ccc.stunned>>1);}
		STIF JJKKLM	2;
		TNT1 A 0{invoker.weaponstatus[0]|=INJECTF_SPENT;}
		Goto Nope;
		UnInject:
		STIF C 6 A_Refire();
		Goto Nope;
		Injection:
		STIF HIJ 2;
		TNT1 A 0{
			bool helptext=DoHelpText();
			flinetracedata injectorline;
			linetrace(
				angle,42,pitch,
				offsetz:gunheight()-2,
				data:injectorline
			);
			let c=HDPlayerPawn(injectorline.hitactor);
			let blockinv=HDWoundFixer.CheckCovered(self,CHECKCOV_ONLYFULL);
			if(blockinv){
				if(helptext)A_WeaponMessage(Stringtable.Localize("$STIMPACK_TAKEOFFOTHER")..blockinv.gettag()..Stringtable.Localize("$STIMPACK_ELIPSES"));
				return resolvestate("InjectFail");
			}
			if(IsMoving.Count(c)>4){
				bool chelptext=DoHelpText(c);
				if(c.countinv("HDStim")){
					if(chelptext)HDWeapon.ForceWeaponMessage(c,string.format(Stringtable.Localize("$STIMPACK_OVERDOSEPLAYER"),player.getusername()));
					if(helptext)A_WeaponMessage(Stringtable.Localize("$STIMPACK_FIDGETY"));
				}else{
					if(chelptext)HDWeapon.ForceWeaponMessage(c,string.format(Stringtable.Localize("$STIMPACK_STOPSQUIRMING"),player.getusername()));
					if(helptext)A_WeaponMessage(Stringtable.Localize("$STIMPACK_STAYSTILLOTHER"));
				}
				return resolvestate("InjectFail");
			}
			if(
				//because poisoning people should count as friendly fire!
				(teamplay || !deathmatch)&&
				(
					(
						invoker.injecttype=="InjectStimDummy"
						&& c.countinv("HDStim")
					)||
					(
						invoker.injecttype=="InjectZerkDummy"
						&& c.countinv("HDZerk")>HDZerk.HDZERK_COOLOFF
					)
				)
			){
				if(DoHelpText(c))HDWeapon.ForceWeaponMessage(c,string.format(Stringtable.Localize("$STIMPACK_OVERDOSEPLAYER"),player.getusername()));
				if(DoHelpText())A_WeaponMessage(Stringtable.Localize("$STIMPACK_SEEMFIDGETY"));
				return resolvestate("InjectFail");
			}
			//and now...
			return resolvestate("injectDone");
		}
		Goto Nope;
	InjectFail:
		STIF JKC 2;
		Goto ReadyEnd;
	injectDone:
		STIF J 1{flinetracedata injectorline;
			linetrace(
				angle,42,pitch,
				offsetz:gunheight()-2,
				data:injectorline
			);
			let c=HDPlayerPawn(injectorline.hitactor);
			c.A_StartSound(hdplayerpawn(c).medsound,CHAN_VOICE);
			c.A_SetBlend("7a 3a 18",0.1,4);
			actor a=spawn(invoker.injecttype,c.pos,ALLOW_REPLACE);
			a.accuracy=40;a.target=c;}
		STIF JJKKLM 2;
		TNT1 A 0 {invoker.weaponstatus[0]|=INJECTF_SPENT;}
		Goto Nope;
	injected:
		TNT1 A 8;
		goto nope;
	}
}

Class NSHPortableBerserkPack: NSHPortableStimpack Replaces PortableBerserkPack
{
	default{
		//$Category "Items/Hideous Destructor/Supplies"
		//$Title "Berserk Pack"
		//$Sprite "PSTRA0"

		inventory.pickupmessage "$PICKUP_ZERKPACK";
		inventory.icon "PSTRA0";
		tag "$TAG_ZERKPACK";
		hdweapon.refid HDLD_BERSERK;

		weapon.selectionorder 1002;

		portablestimpack.mainhelptext "$ZERKPACK_MAINHELPTEXT";
		portablestimpack.spentinjecttype "SpentZerk";
		portablestimpack.injecttype "InjectZerkDummy";
	}
	states{
	spawn2:
		PSTR A -1;
		stop;
	}
}